<?php

namespace Tests\Feature;

use App\Jobs\PersonalBestJob;
use App\Models\BossPersonalBest;
use App\Models\Clan;
use App\Models\RunescapeUser;
use App\Models\User;
use App\Services\ChatLogPatterns;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Queue;
use Illuminate\Support\Str;
use Tests\DataMocks\ChatLogMessages;
use Tests\TestCase;
use Webmozart\Assert\Assert;

class PersonalBestJobTest extends TestCase
{
    use RefreshDatabase;

    private Clan $clan;
    private RunescapeUser $runescapeUser;

    protected function setUp(): void
    {

        parent::setUp(); // TODO: Change the autogenerated stub
        $this->clan = Clan::create([
            'name' => "Some Clan",
            'discord_server_id' => '123',
            'confirmation_code' => uniqid()
        ]);
        RunescapeUser::create([
            'username' => "RSName",
            'clan_id' => $this->clan->id
        ]);
    }

    /**
     * @param $expected
     * @param $message
     * @return void
     * @dataProvider personalBestTestData
     */
    public function test_MessageToModel($expected, $message)
    {

        $matches = [];
        $result = preg_match(ChatLogPatterns::$personalBestPattern, $message, $matches);
        $job = new PersonalBestJob($this->clan, $matches);
        $job->handle();
        $bossPb = BossPersonalBest::latest()->first();
        $this->assertEquals($expected['kill_in_seconds'], $bossPb->kill_time);
    }

    public function personalBestTestData()
    {
        return ChatLogMessages::personalBestTestData();
    }
}
